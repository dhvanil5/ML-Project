import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score
import joblib

# Load the dataset
df = pd.read_csv("IPL_Matches_2008_2020.csv")

# Select important columns
df = df[['team1', 'team2', 'toss_winner', 'toss_decision', 'winner']]
df.dropna(inplace=True)

# Encode categorical features
le = LabelEncoder()
for col in df.columns:
    df[col] = le.fit_transform(df[col])

# Split into input and output
X = df[['team1', 'team2', 'toss_winner', 'toss_decision']]
y = df['winner']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

# Accuracy
preds = model.predict(X_test)
print(f"Model Accuracy: {accuracy_score(y_test, preds)*100:.2f}%")

# Save model
joblib.dump(model, 'ipl_winner_model.pkl')
joblib.dump(le, 'label_encoder.pkl')

print("âœ… Model and encoder saved as 'ipl_winner_model.pkl' and 'label_encoder.pkl'")
